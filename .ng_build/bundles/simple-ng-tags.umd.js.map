{"version":3,"file":"simple-ng-tags.umd.js","sources":["../ts/src/app/modules/simple-ng-tags/simple-ng-tags.module.ts","../ts/src/app/modules/simple-ng-tags/simple-ng-tags.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SimpleNgTagsComponent } from './simple-ng-tags.component';\nimport { FormsModule } from '@angular/forms';\nexport class SimpleNgTagsModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    SimpleNgTagsComponent\n  ],\n  exports: [\n    SimpleNgTagsComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SimpleNgTagsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleNgTagsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSimpleNgTagsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, ElementRef, forwardRef } from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst /** @type {?} */ TAGS_INPUT_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SimpleNgTagsComponent),\n  multi: true\n};\nexport class SimpleNgTagsComponent implements OnInit, ControlValueAccessor {\n  placeholder = '+ Tag';\npublic tags: any[];\npublic onChange: any = Function.prototype;\npublic onTouched: any = Function.prototype;\npublic tag: string = '';\n/**\n * @param {?} elRef\n */\nconstructor(private elRef:ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    this.tags = value;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n/**\n * @param {?} e\n * @return {?}\n */\naddTag(e) {\n    if(this.tag) {\n      const /** @type {?} */ _tagIndex = this.tags.findIndex(tag => tag === this.tag);\n      if(_tagIndex < 0) {\n        this.tags.push(this.tag);\n        this.onChange(this.tags);\n        this.tag = '';\n      } else {\n        const /** @type {?} */ _tagsEl = this.elRef.nativeElement.querySelectorAll('.tag');\n        _tagsEl[_tagIndex].classList.add('blink');\n        setTimeout(()=> {\n          _tagsEl[_tagIndex].classList.remove('blink');\n        }, 2000);\n      }\n    }\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nremoveTag(tag){\n    const /** @type {?} */ _tagIndex = this.tags.findIndex(_tag => _tag === tag);\n    if(_tagIndex > -1) {\n      this.tags.splice(_tagIndex, 1);\n      this.onChange(this.tags);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'simple-ng-tags',\n  template: `\n    <div class=\"tags-container\" (click)=\"focusable.focus()\">\n      <div class=\"tag\" *ngFor=\"let tag of tags\">\n        <button (click)=\"removeTag(tag);\">&#10005;</button> {{tag}}\n      </div>\n\n      <input type=\"text\" #focusable [placeholder]=\"placeholder\" name=\"tag-input\" [(ngModel)]=\"tag\" (keyup.enter) = \"addTag($event)\">\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-wrap: wrap;\n          flex-wrap: wrap;\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start;\n      border: 1px solid #ddd;\n      cursor: text;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      font-family: Sans-Serif;\n    }\n\n    :host .ng-invalid {\n      background-color: rgba(169, 68, 66, .2);\n    }\n\n    * {\n      outline: none;\n    }\n\n    .tags-container {\n      border: none;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -ms-flex-wrap: wrap;\n          flex-wrap: wrap;\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      padding: 0 10px;\n    }\n\n    .tag {\n      background-color: #eee;\n      border-radius: 4px;\n      color: #333;\n      cursor: default;\n      display: inline-block;\n      -ms-flex-negative: 0;\n          flex-shrink: 0;\n      font-size: 14px;\n      line-height: 22px;\n      margin: 2px 5px 2px 0;\n      padding: 0 4px;\n    }\n\n    .tag button {\n      cursor: pointer;\n      border: none;\n      background: transparent;\n      color: #aaa;\n      font-size: 14px;\n      height: 20px;\n      line-height: 20px;\n      padding: 0px;\n    }\n\n    .tag button:hover {\n      color: #555;\n    }\n\n    input {\n      height: 22px;\n      line-height: 22px;\n      font-size: 14px;\n      -webkit-box-flex: 1;\n          -ms-flex: 1 0 50px;\n              flex: 1 0 50px;\n      border: none;\n      background: transparent;\n      margin: 2px 6px !important;\n    }\n\n    .blink {\n      -webkit-animation: pulse 2s ease-out 1 alternate;\n      animation:         pulse 2s ease-out 1 alternate; \n    }\n    @-webkit-keyframes pulse {\n      0% {\n        background: rgb(43, 179, 122);\n      }\n      10% {\n        background: rgb(43, 179, 122);\n      }\n      50% {\n        background-color: #eee;\n      }\n    }\n    @keyframes pulse {\n      0% {\n        background: rgb(43, 179, 122);\n      }\n      10% {\n        background: rgb(43, 179, 122);\n      }\n      50% {\n        background-color: #eee;\n      }\n    }\n  `],\n  providers: [TAGS_INPUT_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placeholder': [{ type: Input },],\n};\n}\n\nfunction SimpleNgTagsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleNgTagsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSimpleNgTagsComponent.ctorParameters;\n/** @type {?} */\nSimpleNgTagsComponent.propDecorators;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.placeholder;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.tags;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.onChange;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.onTouched;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.tag;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.elRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["FormsModule","CommonModule","NgModule","Input","ElementRef","Component","forwardRef","NG_VALUE_ACCESSOR"],"mappings":"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"}
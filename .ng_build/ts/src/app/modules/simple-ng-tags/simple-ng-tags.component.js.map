{"version":3,"sources":["simple-ng-tags.component.ts"],"names":[],"mappings":"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","file":"simple-ng-tags.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, Input, ElementRef, forwardRef } from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst /** @type {?} */ TAGS_INPUT_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SimpleNgTagsComponent),\n  multi: true\n};\nexport class SimpleNgTagsComponent implements OnInit, ControlValueAccessor {\n  placeholder = '+ Tag';\npublic tags: any[];\npublic onChange: any = Function.prototype;\npublic onTouched: any = Function.prototype;\npublic tag: string = '';\n/**\n * @param {?} elRef\n */\nconstructor(private elRef:ElementRef) { }\n/**\n * @return {?}\n */\nngOnInit() {\n\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    this.tags = value;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n/**\n * @param {?} e\n * @return {?}\n */\naddTag(e) {\n    if(this.tag) {\n      const /** @type {?} */ _tagIndex = this.tags.findIndex(tag => tag === this.tag);\n      if(_tagIndex < 0) {\n        this.tags.push(this.tag);\n        this.onChange(this.tags);\n        this.tag = '';\n      } else {\n        const /** @type {?} */ _tagsEl = this.elRef.nativeElement.querySelectorAll('.tag');\n        _tagsEl[_tagIndex].classList.add('blink');\n        setTimeout(()=> {\n          _tagsEl[_tagIndex].classList.remove('blink');\n        }, 2000);\n      }\n    }\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nremoveTag(tag){\n    const /** @type {?} */ _tagIndex = this.tags.findIndex(_tag => _tag === tag);\n    if(_tagIndex > -1) {\n      this.tags.splice(_tagIndex, 1);\n      this.onChange(this.tags);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'simple-ng-tags',\n  template: `\n    <div class=\"tags-container\" (click)=\"focusable.focus()\">\n      <div class=\"tag\" *ngFor=\"let tag of tags\">\n        <button (click)=\"removeTag(tag);\">&#10005;</button> {{tag}}\n      </div>\n\n      <input type=\"text\" #focusable [placeholder]=\"placeholder\" name=\"tag-input\" [(ngModel)]=\"tag\" (keyup.enter) = \"addTag($event)\">\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-wrap: wrap;\n          flex-wrap: wrap;\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start;\n      border: 1px solid #ddd;\n      cursor: text;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      font-family: Sans-Serif;\n    }\n\n    :host .ng-invalid {\n      background-color: rgba(169, 68, 66, .2);\n    }\n\n    * {\n      outline: none;\n    }\n\n    .tags-container {\n      border: none;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -ms-flex-wrap: wrap;\n          flex-wrap: wrap;\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      padding: 0 10px;\n    }\n\n    .tag {\n      background-color: #eee;\n      border-radius: 4px;\n      color: #333;\n      cursor: default;\n      display: inline-block;\n      -ms-flex-negative: 0;\n          flex-shrink: 0;\n      font-size: 14px;\n      line-height: 22px;\n      margin: 2px 5px 2px 0;\n      padding: 0 4px;\n    }\n\n    .tag button {\n      cursor: pointer;\n      border: none;\n      background: transparent;\n      color: #aaa;\n      font-size: 14px;\n      height: 20px;\n      line-height: 20px;\n      padding: 0px;\n    }\n\n    .tag button:hover {\n      color: #555;\n    }\n\n    input {\n      height: 22px;\n      line-height: 22px;\n      font-size: 14px;\n      -webkit-box-flex: 1;\n          -ms-flex: 1 0 50px;\n              flex: 1 0 50px;\n      border: none;\n      background: transparent;\n      margin: 2px 6px !important;\n    }\n\n    .blink {\n      -webkit-animation: pulse 2s ease-out 1 alternate;\n      animation:         pulse 2s ease-out 1 alternate; \n    }\n    @-webkit-keyframes pulse {\n      0% {\n        background: rgb(43, 179, 122);\n      }\n      10% {\n        background: rgb(43, 179, 122);\n      }\n      50% {\n        background-color: #eee;\n      }\n    }\n    @keyframes pulse {\n      0% {\n        background: rgb(43, 179, 122);\n      }\n      10% {\n        background: rgb(43, 179, 122);\n      }\n      50% {\n        background-color: #eee;\n      }\n    }\n  `],\n  providers: [TAGS_INPUT_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placeholder': [{ type: Input },],\n};\n}\n\nfunction SimpleNgTagsComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleNgTagsComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSimpleNgTagsComponent.ctorParameters;\n/** @type {?} */\nSimpleNgTagsComponent.propDecorators;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.placeholder;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.tags;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.onChange;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.onTouched;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.tag;\n/** @type {?} */\nSimpleNgTagsComponent.prototype.elRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}